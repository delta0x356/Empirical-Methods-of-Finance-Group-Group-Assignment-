----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/delta/Documents/GitHub/Empirical-Methods-of-Finance-Group-Grou
> p-Assignment-/Results.log
  log type:  text
 opened on:  20 Sep 2025, 05:28:39

. 
. * Loading data
. use tic date rh PRC SHROUT using ///
>     "rh_daily.dta", clear

. 
. ************************************************************
. * Data cleaning – Assignment 1
. ************************************************************
. 
. * a) Drop observations with missing or negative stock price
. drop if missing(PRC) | PRC < 0
(860,093 observations deleted)

. 
. * b) Drop observations on Robinhood outage dates
. drop if inlist(date, mdy(3,2,2020), mdy(3,3,2020), mdy(6,18,2020))
(7,001 observations deleted)

. 
. ************************************************************
. * Count remaining distinct stocks and trading days
. ************************************************************
. 
. * Count number of distinct stocks (unique ticker symbols)
. egen stockid = tag(tic)

. count if stockid
  3,817

. 
. * Count number of distinct trading days (unique dates)
. egen dayid = tag(date)

. count if dayid
  545

. 
. ************************************************************
. * Task 2 – Create year variable and summary statistics
. ************************************************************
. 
. * a) Generate year from the Stata daily date variable
. gen year = year(date)

. 
. * b) Summary statistics of rh (number of RH investors holding a stock),
. *    by year: N (obs), mean, standard deviation, median
. by year, sort: summarize rh

----------------------------------------------------------------------------------
-> year = 2018

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
          rh |    470,477     1758.96    9945.933          0     216215

----------------------------------------------------------------------------------
-> year = 2019

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
          rh |    787,498    2452.887    13544.21          0     320372

----------------------------------------------------------------------------------
-> year = 2020

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
          rh |    492,310    5663.198    31400.03          0     944922


. by year, sort: tabstat rh, statistics(mean sd median n)

----------------------------------------------------------------------------------
-> year = 2018

    Variable |      Mean        SD       p50         N
-------------+----------------------------------------
          rh |   1758.96  9945.933       205    470477
------------------------------------------------------

----------------------------------------------------------------------------------
-> year = 2019

    Variable |      Mean        SD       p50         N
-------------+----------------------------------------
          rh |  2452.887  13544.21       285    787498
------------------------------------------------------

----------------------------------------------------------------------------------
-> year = 2020

    Variable |      Mean        SD       p50         N
-------------+----------------------------------------
          rh |  5663.198  31400.03       545    492310
------------------------------------------------------

. 
. ************************************************************
. * Task 2(b) – Check which statements are correct
. ************************************************************
. * i. Total number of Robinhood investors in 2018
. *    (sum of rh across all observations in 2018) -> INCORRECT
. summarize rh if year==2018, detail

                             rh
-------------------------------------------------------------
      Percentiles      Smallest
 1%            5              0
 5%           15              0
10%           26              0       Obs             470,477
25%           65              0       Sum of wgt.     470,477

50%          205                      Mean            1758.96
                        Largest       Std. dev.      9945.933
75%          652         212154
90%         2181         214415       Variance       9.89e+07
95%         4939         214819       Skewness       12.27734
99%        31797         216215       Kurtosis       178.0158

. display "Total RH investors 2018 = " r(sum)
Total RH investors 2018 = 8.276e+08

. 
. * ii & iii. Median number of investors in 2020 - ii -> INCORRECT, iii -> CORRECT
. summarize rh if year==2020, detail

                             rh
-------------------------------------------------------------
      Percentiles      Smallest
 1%            6              0
 5%           25              0
10%           48              0       Obs             492,310
25%          151              0       Sum of wgt.     492,310

50%          545                      Mean           5663.198
                        Largest       Std. dev.      31400.03
75%         2030         941204
90%         7231         941276       Variance       9.86e+08
95%        17598         942657       Skewness        14.5873
99%       101770         944922       Kurtosis       286.7206

. display "Median number of investors per stock in 2020 = " r(p50)
Median number of investors per stock in 2020 = 545

. 
. * iv. Check if data is at stock-day level
. duplicates report tic date

Duplicates in terms of tic date

--------------------------------------
   Copies | Observations       Surplus
----------+---------------------------
        1 |      1750285             0
--------------------------------------

. 
. ************************************************************
. * Task 3 – Number of trading-day observations per ticker
. ************************************************************
. 
. bysort tic: egen days_per_ticker = count(date)

. egen ticker_tag = tag(tic)

. 
. summarize days_per_ticker if ticker_tag, detail

                       days_per_ticker
-------------------------------------------------------------
      Percentiles      Smallest
 1%           21              2
 5%           95              2
10%          167              3       Obs               3,817
25%          449              5       Sum of wgt.       3,817

50%          545                      Mean           458.5499
                        Largest       Std. dev.      154.9106
75%          545            545
90%          545            545       Variance       23997.28
95%          545            545       Skewness       -1.60162
99%          545            545       Kurtosis        4.06957

. display "Average days per ticker = " r(mean)
Average days per ticker = 458.54991

. display "Median days per ticker = " r(p50)
Median days per ticker = 545

. display "Minimum days per ticker = " r(min)
Minimum days per ticker = 2

. display "Maximum days per ticker = " r(max)
Maximum days per ticker = 545

. 
. summarize days_per_ticker if tic=="S"

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
days_per_t~r |        455         455           0        455        455

. 
. ************************************************************
. * Task 4 – Calculate new variables
. ************************************************************
. 
. gen mktcap = PRC * SHROUT / 1000

. bysort tic (date): gen ret = (mktcap - mktcap[_n-1]) / mktcap[_n-1]
(3,817 missing values generated)

. bysort tic (date): gen userchg = rh - rh[_n-1]
(3,817 missing values generated)

. bysort tic (date): gen userratio = rh / rh[_n-1]
(9,400 missing values generated)

. drop if missing(ret)
(3,817 observations deleted)

. 
. summarize mktcap ret userchg userratio

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
      mktcap |  1,746,468     8616.61    42828.48      .0297    1966963
         ret |  1,746,468    .0014964    .2901892  -.9181383   372.8114
     userchg |  1,746,468    15.18571       342.4     -39981      74869
   userratio |  1,740,885    1.007801    .3803828          0     270.75

. 
. ************************************************************
. * Task 5 – Identify top movers
. ************************************************************
. 
. gen absret = abs(ret)

. bysort date (absret): gen rank_absret = _N - _n + 1

. bysort date: gen topmover = rank_absret <= 20

. gen byte posret = (ret > 0)

. tab posret if topmover==1

     posret |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |      3,549       32.62       32.62
          1 |      7,331       67.38      100.00
------------+-----------------------------------
      Total |     10,880      100.00

. tabstat mktcap ret absret userchg userratio, by(topmover) statistics(n mean sd m
> edian)

Summary statistics: N, Mean, SD, p50
Group variable: topmover 

topmover |    mktcap       ret    absret   userchg  userra~o
---------+--------------------------------------------------
       0 |   1735588   1735588   1735588   1735588   1730107
         |  8665.328  .0000436  .0240791  13.59478  1.006484
         |  42955.42  .0384479  .0299739  317.2785  .3467726
         |  851.4995         0  .0145345         0         1
---------+--------------------------------------------------
       1 |     10880     10880     10880     10880     10778
         |  845.0439  .2332419  .3888794  268.9728  1.219268
         |  6035.425  3.637141  3.623804  1642.033  2.005789
         |  86.28014  .1823401  .2321107         9  1.015814
---------+--------------------------------------------------
   Total |   1746468   1746468   1746468   1746468   1740885
         |   8616.61  .0014964  .0263517  15.18571  1.007801
         |  42828.48  .2901892  .2889941     342.4  .3803828
         |  840.1722         0  .0146721         0         1
------------------------------------------------------------

. bysort tic (date): gen lag_topmover = topmover[_n-1]
(3,817 missing values generated)

. 
. ************************************************************
. * Quality check: confirm 20 top movers per day
. ************************************************************
. 
. bys date: egen tmcount = total(topmover)

. summ tmcount

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     tmcount |  1,746,468          20           0         20         20

. list date tmcount if tmcount != 20

. 
. ************************************************************
. * Task 5(f) – Model 1: userchg on lag_topmover
. ************************************************************
. 
. regress userchg lag_topmover

      Source |       SS           df       MS      Number of obs   = 1,742,651
-------------+----------------------------------   F(1, 1742649)   =  17826.45
       Model |  1.9039e+09         1  1.9039e+09   Prob > F        =    0.0000
    Residual |  1.8612e+11 1,742,649  106803.633   R-squared       =    0.0101
-------------+----------------------------------   Adj R-squared   =    0.0101
       Total |  1.8803e+11 1,742,650   107896.12   Root MSE        =    326.81

------------------------------------------------------------------------------
     userchg | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   420.3837   3.148571   133.52   0.000     414.2126    426.5547
       _cons |   12.31046   .2483378    49.57   0.000     11.82373     12.7972
------------------------------------------------------------------------------

. estat hettest

Breusch–Pagan/Cook–Weisberg test for heteroskedasticity 
Assumption: Normal error terms
Variable: Fitted values of userchg

H0: Constant variance

    chi2(1) = 1.21e+07
Prob > chi2 =   0.0000

. regress userchg lag_topmover, robust

Linear regression                               Number of obs     =  1,742,651
                                                F(1, 1742649)     =     372.61
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0101
                                                Root MSE          =     326.81

------------------------------------------------------------------------------
             |               Robust
     userchg | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   420.3837   21.77816    19.30   0.000     377.6992    463.0681
       _cons |   12.31046   .2085034    59.04   0.000      11.9018    12.71912
------------------------------------------------------------------------------

. 
. ************************************************************
. * Task 5(g) – Model 2: userratio on lag_topmover
. ************************************************************
. 
. regress userratio lag_topmover

      Source |       SS           df       MS      Number of obs   = 1,737,406
-------------+----------------------------------   F(1, 1737404)   =   8359.98
       Model |  538.560925         1  538.560925   Prob > F        =    0.0000
    Residual |  111925.812 1,737,404  .064421293   R-squared       =    0.0048
-------------+----------------------------------   Adj R-squared   =    0.0048
       Total |  112464.373 1,737,405  .064731236   Root MSE        =    .25381

------------------------------------------------------------------------------
   userratio | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   .2245127   .0024555    91.43   0.000        .2197    .2293253
       _cons |   1.005283   .0001932  5204.47   0.000     1.004904    1.005661
------------------------------------------------------------------------------

. estat hettest

Breusch–Pagan/Cook–Weisberg test for heteroskedasticity 
Assumption: Normal error terms
Variable: Fitted values of userratio

H0: Constant variance

    chi2(1) = 3.16e+06
Prob > chi2 =   0.0000

. regress userratio lag_topmover, robust

Linear regression                               Number of obs     =  1,737,406
                                                F(1, 1737404)     =     333.90
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0048
                                                Root MSE          =     .25381

------------------------------------------------------------------------------
             |               Robust
   userratio | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   .2245127   .0122866    18.27   0.000     .2004314     .248594
       _cons |   1.005283    .000178  5647.05   0.000     1.004934    1.005632
------------------------------------------------------------------------------

. 
. ************************************************************
. * Task 5(h) – Model 3: userchg on lag_topmover + mktcap
. ************************************************************
. 
. regress userchg lag_topmover mktcap

      Source |       SS           df       MS      Number of obs   = 1,742,651
-------------+----------------------------------   F(2, 1742648)   =  21700.86
       Model |  4.5691e+09         2  2.2845e+09   Prob > F        =    0.0000
    Residual |  1.8346e+11 1,742,648  105274.322   R-squared       =    0.0243
-------------+----------------------------------   Adj R-squared   =    0.0243
       Total |  1.8803e+11 1,742,650   107896.12   Root MSE        =    324.46

------------------------------------------------------------------------------
     userchg | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   427.5265    3.12627   136.75   0.000     421.3991    433.6539
      mktcap |   .0009128   5.74e-06   159.11   0.000     .0009016    .0009241
       _cons |   4.397488   .2515192    17.48   0.000     3.904519    4.890457
------------------------------------------------------------------------------

. estat hettest

Breusch–Pagan/Cook–Weisberg test for heteroskedasticity 
Assumption: Normal error terms
Variable: Fitted values of userchg

H0: Constant variance

    chi2(1) = 1.73e+07
Prob > chi2 =   0.0000

. regress userchg lag_topmover mktcap, robust

Linear regression                               Number of obs     =  1,742,651
                                                F(2, 1742648)     =     359.72
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0243
                                                Root MSE          =     324.46

------------------------------------------------------------------------------
             |               Robust
     userchg | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   427.5265   21.77846    19.63   0.000     384.8415    470.2115
      mktcap |   .0009128   .0000487    18.76   0.000     .0008175    .0010082
       _cons |   4.397488   .3960764    11.10   0.000     3.621192    5.173784
------------------------------------------------------------------------------

. 
. ************************************************************
. * Task 6 – Feature Launch Interaction Model (Diff-in-Diff)
. ************************************************************
. 
. gen byte list = date >= mdy(8,1,2019)

. 
. regress userchg lag_topmover list c.lag_topmover#c.list mktcap

      Source |       SS           df       MS      Number of obs   = 1,742,651
-------------+----------------------------------   F(4, 1742646)   =  14093.33
       Model |  5.8919e+09         4  1.4730e+09   Prob > F        =    0.0000
    Residual |  1.8213e+11 1,742,646  104515.371   R-squared       =    0.0313
-------------+----------------------------------   Adj R-squared   =    0.0313
       Total |  1.8803e+11 1,742,650   107896.12   Root MSE        =    323.29

---------------------------------------------------------------------------------
        userchg | Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
----------------+----------------------------------------------------------------
   lag_topmover |   138.6204   4.210243    32.92   0.000     130.3685    146.8723
           list |      19.03   .4915624    38.71   0.000     18.06655    19.99344
                |
 c.lag_topmover#|
         c.list |   639.9109   6.257523   102.26   0.000     627.6463    652.1754
                |
         mktcap |   .0009139   5.72e-06   159.88   0.000     .0009027    .0009251
          _cons |  -4.834506   .3459101   -13.98   0.000    -5.512478   -4.156534
---------------------------------------------------------------------------------

. estat hettest

Breusch–Pagan/Cook–Weisberg test for heteroskedasticity 
Assumption: Normal error terms
Variable: Fitted values of userchg

H0: Constant variance

    chi2(1) = 2.83e+07
Prob > chi2 =   0.0000

. regress userchg lag_topmover list c.lag_topmover#c.list mktcap, robust

Linear regression                               Number of obs     =  1,742,651
                                                F(4, 1742646)     =     622.64
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0313
                                                Root MSE          =     323.29

---------------------------------------------------------------------------------
                |               Robust
        userchg | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
----------------+----------------------------------------------------------------
   lag_topmover |   138.6204   8.622806    16.08   0.000       121.72    155.5208
           list |      19.03   .4291263    44.35   0.000     18.18893    19.87107
                |
 c.lag_topmover#|
         c.list |   639.9109   47.25208    13.54   0.000     547.2984    732.5233
                |
         mktcap |   .0009139   .0000486    18.80   0.000     .0008186    .0010092
          _cons |  -4.834506   .4341091   -11.14   0.000    -5.685345   -3.983667
---------------------------------------------------------------------------------

. 
. ************************************************************
. * Task 7 – Interpretation Notes (for PDF)
. ************************************************************
. 
. * β1  = effect of being a lagged top mover BEFORE Aug 1, 2019.
. * β2  = shift in baseline user change after Aug 1, 2019 (when the list existed).
. * β3  = additional effect of being a lagged top mover AFTER Aug 1, 2019.
. * β4  = effect of market capitalization (in millions) on user change.
. 
. log close
      name:  <unnamed>
       log:  /Users/delta/Documents/GitHub/Empirical-Methods-of-Finance-Group-Grou
> p-Assignment-/Results.log
  log type:  text
 closed on:  20 Sep 2025, 05:28:56
----------------------------------------------------------------------------------
