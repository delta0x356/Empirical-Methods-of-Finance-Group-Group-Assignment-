----------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/delta/Documents/GitHub/Empirical-Methods-of-Finance-Group-Grou
> p-Assignment-/empirical_finance_assignment.log
  log type:  text
 opened on:  20 Sep 2025, 04:40:32

. 
. ************************************************************
. * 1. Load data
. ************************************************************
. use tic date rh PRC SHROUT using "rh_daily.dta", clear

. 
. ************************************************************
. * 2. Data Cleaning
. ************************************************************
. drop if missing(PRC) | PRC < 0
(860,093 observations deleted)

. drop if inlist(date, mdy(3,2,2020), mdy(3,3,2020), mdy(6,18,2020))
(7,001 observations deleted)

. 
. ************************************************************
. * 3. Distinct Stocks & Days
. ************************************************************
. egen stockid = tag(tic)

. egen dayid = tag(date)

. * count if stockid
. * count if dayid
. 
. ************************************************************
. * 4. Year & Summary Stats
. ************************************************************
. gen year = year(date)

. * by year, sort: summarize rh
. * by year, sort: tabstat rh, statistics(mean sd median n)
. 
. * Total RH investors in 2018
. summarize rh if year==2018, meanonly

. display "RH investors 2018 = " r(sum)
RH investors 2018 = 8.276e+08

. 
. * Median RH investors in 2020
. summarize rh if year==2020, detail

                             rh
-------------------------------------------------------------
      Percentiles      Smallest
 1%            6              0
 5%           25              0
10%           48              0       Obs             492,310
25%          151              0       Sum of wgt.     492,310

50%          545                      Mean           5663.198
                        Largest       Std. dev.      31400.03
75%         2030         941204
90%         7231         941276       Variance       9.86e+08
95%        17598         942657       Skewness        14.5873
99%       101770         944922       Kurtosis       286.7206

. display "Median RH investors 2020 = " r(p50)
Median RH investors 2020 = 545

. 
. * Dataset is stock-day level
. duplicates report tic date

Duplicates in terms of tic date

--------------------------------------
   Copies | Observations       Surplus
----------+---------------------------
        1 |      1750285             0
--------------------------------------

. 
. ************************************************************
. * 5. Days Per Ticker
. ************************************************************
. bysort tic: egen days_per_ticker = count(date)

. egen ticker_tag = tag(tic)

. summarize days_per_ticker if ticker_tag, meanonly

. 
. display "Avg Days per Ticker: " r(mean)
Avg Days per Ticker: 458.54991

. 
. * Sprint Corp check
. summarize days_per_ticker if tic=="S"

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
days_per_t~r |        455         455           0        455        455

. 
. ************************************************************
. * 6. Derived Variables
. ************************************************************
. gen mktcap = PRC * SHROUT / 1000

. bysort tic (date): gen ret = (mktcap - mktcap[_n-1]) / mktcap[_n-1]
(3,817 missing values generated)

. bysort tic (date): gen userchg = rh - rh[_n-1]
(3,817 missing values generated)

. bysort tic (date): gen userratio = rh / rh[_n-1]
(9,400 missing values generated)

. drop if missing(ret)
(3,817 observations deleted)

. 
. ************************************************************
. * 7. Top Movers
. ************************************************************
. gen absret = abs(ret)

. bysort date (absret): gen rank_absret = _N - _n + 1

. bysort date: gen topmover = rank_absret <= 20

. gen byte posret = (ret > 0)

. 
. * tab posret if topmover==1
. 
. tabstat mktcap ret absret userchg userratio, by(topmover) statistics(n mean sd m
> edian)

Summary statistics: N, Mean, SD, p50
Group variable: topmover 

topmover |    mktcap       ret    absret   userchg  userra~o
---------+--------------------------------------------------
       0 |   1735588   1735588   1735588   1735588   1730107
         |  8665.328  .0000436  .0240791  13.59478  1.006484
         |  42955.42  .0384479  .0299739  317.2785  .3467726
         |  851.4995         0  .0145345         0         1
---------+--------------------------------------------------
       1 |     10880     10880     10880     10880     10778
         |  845.0439  .2332419  .3888794  268.9728  1.219268
         |  6035.425  3.637141  3.623804  1642.033  2.005789
         |  86.28014  .1823401  .2321107         9  1.015814
---------+--------------------------------------------------
   Total |   1746468   1746468   1746468   1746468   1740885
         |   8616.61  .0014964  .0263517  15.18571  1.007801
         |  42828.48  .2901892  .2889941     342.4  .3803828
         |  840.1722         0  .0146721         0         1
------------------------------------------------------------

. 
. bysort tic (date): gen lag_topmover = topmover[_n-1]
(3,817 missing values generated)

. 
. ************************************************************
. * Quality Check – Top Movers Per Day
. ************************************************************
. bys date: egen tmcount = total(topmover)

. summ tmcount

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
     tmcount |  1,746,468          20           0         20         20

. * list date tmcount if tmcount != 20
. 
. ************************************************************
. * Heteroskedasticity Tests
. ************************************************************
. quietly regress userchg lag_topmover

. estat hettest

Breusch–Pagan/Cook–Weisberg test for heteroskedasticity 
Assumption: Normal error terms
Variable: Fitted values of userchg

H0: Constant variance

    chi2(1) = 1.21e+07
Prob > chi2 =   0.0000

. local bp_pvalue = r(p)

. estat imtest, white

White's test
H0: Homoskedasticity
Ha: Unrestricted heteroskedasticity

    chi2(1) = 3540.00
Prob > chi2 =  0.0000

Cameron & Trivedi's decomposition of IM-test

--------------------------------------------------
              Source |       chi2     df         p
---------------------+----------------------------
  Heteroskedasticity |    3539.98      1    0.0000
            Skewness |    1637.84      1    0.0000
            Kurtosis | -685897.80      1    1.0000
---------------------+----------------------------
               Total | -680719.97      3    1.0000
--------------------------------------------------

. local white_pvalue = r(p)

. 
. if `bp_pvalue' < 0.05 | `white_pvalue' < 0.05 {
.     local use_robust = 1
. }

. else {
.     local use_robust = 0
. }

. 
. ************************************************************
. * Regressions – Lagged Top Mover
. ************************************************************
. 
. * --- Model 1: userchg on lag_topmover ---
. if `use_robust' {
.     regress userchg lag_topmover, robust

Linear regression                               Number of obs     =  1,742,651
                                                F(1, 1742649)     =     372.61
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0101
                                                Root MSE          =     326.81

------------------------------------------------------------------------------
             |               Robust
     userchg | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   420.3837   21.77816    19.30   0.000     377.6992    463.0681
       _cons |   12.31046   .2085034    59.04   0.000      11.9018    12.71912
------------------------------------------------------------------------------
. }

. else {
.     regress userchg lag_topmover
. }

. 
. local coef_lag = _b[lag_topmover]

. display "Model 1: Coef = " `coef_lag'
Model 1: Coef = 420.38366

. 
. * --- Model 2: userratio on lag_topmover ---
. if `use_robust' {
.     regress userratio lag_topmover, robust

Linear regression                               Number of obs     =  1,737,406
                                                F(1, 1737404)     =     333.90
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0048
                                                Root MSE          =     .25381

------------------------------------------------------------------------------
             |               Robust
   userratio | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   .2245127   .0122866    18.27   0.000     .2004314     .248594
       _cons |   1.005283    .000178  5647.05   0.000     1.004934    1.005632
------------------------------------------------------------------------------
. }

. else {
.     regress userratio lag_topmover
. }

. local coef_lag2 = _b[lag_topmover]

. display "Model 2: Coef = " `coef_lag2'
Model 2: Coef = .22451267

. 
. * --- Model 3: userchg on lag_topmover + mktcap ---
. if `use_robust' {
.     regress userchg lag_topmover mktcap, robust

Linear regression                               Number of obs     =  1,742,651
                                                F(2, 1742648)     =     359.72
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0243
                                                Root MSE          =     324.46

------------------------------------------------------------------------------
             |               Robust
     userchg | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
-------------+----------------------------------------------------------------
lag_topmover |   427.5265   21.77846    19.63   0.000     384.8415    470.2115
      mktcap |   .0009128   .0000487    18.76   0.000     .0008175    .0010082
       _cons |   4.397488   .3960764    11.10   0.000     3.621192    5.173784
------------------------------------------------------------------------------
. }

. else {
.     regress userchg lag_topmover mktcap
. }

. local coef_lag3 = _b[lag_topmover]

. display "Model 3: Coef = " `coef_lag3'
Model 3: Coef = 427.52649

. 
. ************************************************************
. * DiD: RH Top Movers Feature Introduction (Aug 1, 2019)
. ************************************************************
. gen byte list = date >= mdy(8,1,2019)

. 
. if `use_robust' {
.     regress userchg lag_topmover list c.lag_topmover#c.list mktcap, robust

Linear regression                               Number of obs     =  1,742,651
                                                F(4, 1742646)     =     622.64
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0313
                                                Root MSE          =     323.29

---------------------------------------------------------------------------------
                |               Robust
        userchg | Coefficient  std. err.      t    P>|t|     [95% conf. interval]
----------------+----------------------------------------------------------------
   lag_topmover |   138.6204   8.622806    16.08   0.000       121.72    155.5208
           list |      19.03   .4291263    44.35   0.000     18.18893    19.87107
                |
 c.lag_topmover#|
         c.list |   639.9109   47.25208    13.54   0.000     547.2984    732.5233
                |
         mktcap |   .0009139   .0000486    18.80   0.000     .0008186    .0010092
          _cons |  -4.834506   .4341091   -11.14   0.000    -5.685345   -3.983667
---------------------------------------------------------------------------------
. }

. else {
.     regress userchg lag_topmover list c.lag_topmover#c.list mktcap
. }

. 
. ************************************************************
. * End log
. ************************************************************
. log close
      name:  <unnamed>
       log:  /Users/delta/Documents/GitHub/Empirical-Methods-of-Finance-Group-Grou
> p-Assignment-/empirical_finance_assignment.log
  log type:  text
 closed on:  20 Sep 2025, 04:40:47
----------------------------------------------------------------------------------
